-- MAIN LOADER v2.4 (Discord Link v2)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
shared.Rayfield = Rayfield

local Window = Rayfield:CreateWindow({
    Name = "ReportBait.exe by TnT",
    LoadingTitle = "Initializing Modules...",
    LoadingSubtitle = "Loader v2.4 (Release)",
    ConfigurationSaving = true,
    KeySystem = true,
    KeySettings = {
        Title = "TnT Access",
        Subtitle = "Enter clan key",
        Note = "Key rotates weekly",
        FileName = "TnT_Key",
        SaveKey = true,
        Key = "tapshift"
    }
})

-- Home Tab FIRST
local HomeTab = Window:CreateTab("Home", "home")
HomeTab:CreateSection("System Status")
HomeTab:CreateLabel("Main system initialized")

-- Ordered module list (Farm → PvP → Player → Settings)
local OrderedModules = {
    {name = "Farm", url = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/FARM_MODULE"},
    {name = "PvP", url = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/PVP_MODULE"},
    {name = "Player", url = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/PLAYER_MODULE"},
    {name = "Settings", url = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/SETTINGS_MODULE"}
}

for _, module in ipairs(OrderedModules) do
    local success, err = pcall(function()
        local moduleSrc = game:HttpGet(module.url.."?t="..os.time(), true)
        
        if not moduleSrc:match("return function") and not moduleSrc:match("Window") then
            local tab = Window:CreateTab(module.name, "question")
            tab:CreateLabel("Module placeholder")
            tab:CreateLabel("Content coming soon!")
            return
        end
        
        local loaded = loadstring(moduleSrc)()
        if type(loaded) == "function" then
            loaded(Window)
        else
            local tab = Window:CreateTab(module.name, "alert-circle")
            tab:CreateLabel("Module loaded with irregular structure")
        end
    end)
    
    if not success then
        local tab = Window:CreateTab(module.name.." (Error)", "alert-triangle")
        tab:CreateLabel("Load error:")
        tab:CreateLabel(tostring(err):sub(1, 50))
        warn("["..module.name.." Module] "..tostring(err))
    end
    task.wait(0.5)
end

-- Update Home Tab after all modules load
HomeTab:CreateLabel("Tabs loaded successfully.")
HomeTab:CreateLabel("System ready at "..os.date("%X"))

-- Discord Section
HomeTab:CreateSection("Community")
HomeTab:CreateLabel("Join our Discord for updates and support!")

local DiscordButton = HomeTab:CreateButton({
    Name = " Join Discord Server ",
    Callback = function()
        -- Try to open in Discord desktop app first
        local discordAppSuccess = false
        local http = game:GetService("HttpService")
        
        -- First attempt: Discord RPC
        discordAppSuccess = pcall(function()
            http:RequestAsync({
                Url = "http://127.0.0.1:6463/rpc?v=1",
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json",
                    ["Origin"] = "https://discord.com"
                },
                Body = http:JSONEncode({
                    cmd = "INVITE_BROWSER",
                    args = { code = "YWj4PHWcjV" },
                    nonce = http:GenerateGUID(false)
                })
            })
        end)
        
        -- Second attempt: Direct browser fallback
        if not discordAppSuccess then
            local browserSuccess = pcall(function()
                game:GetService("GuiService"):OpenBrowserWindow("https://discord.gg/YWj4PHWcjV")
            end)
            
            -- Third attempt: Alternative browser method
            if not browserSuccess then
                pcall(function()
                    game:GetService("StarterGui"):SetCore("OpenBrowserWindow", {
                        Url = "https://discord.gg/YWj4PHWcjV"
                    })
                end)
            end
            
            -- User feedback
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Discord Invite",
                Text = "Opening browser...",
                Icon = "http://www.roblox.com/asset/?id=9334666836", -- Discord icon
                Duration = 3
            })
        end
    end,
    Interact = 'Click'
})

-- Visual styling (if supported by your UI library)
if DiscordButton.SetButtonStyle then
    DiscordButton:SetButtonStyle({
        BackgroundColor3 = Color3.fromRGB(88, 101, 242), -- Discord blurple
        TextColor3 = Color3.fromRGB(255, 255, 255),
        HoverBackgroundColor3 = Color3.fromRGB(71, 82, 196)
    })
    
    -- Add Discord logo icon if supported
    if DiscordButton.SetIcon then
        DiscordButton:SetIcon("rbxassetid://9334666836") -- Discord icon ID
    end
end
