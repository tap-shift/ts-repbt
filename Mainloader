-- MAIN LOADER v1.5 (MODULE-FRIENDLY)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
shared.Rayfield = Rayfield

local Window = Rayfield:CreateWindow({
    Name = "ReportBait.exe by TnT",
    LoadingTitle = "Initializing Modules...",
    LoadingSubtitle = "Loader v1.5",
    ConfigurationSaving = true,
    KeySystem = true,
    KeySettings = {
        Title = "TnT Access",
        Subtitle = "Enter clan key",
        Note = "Key rotates weekly",
        FileName = "TnT_Key",
        SaveKey = true,
        Key = "tapshift"
    }
})

-- Module loader with empty module support
local TnT_Modules = {
    Player = "https://raw.githubusercontent.com/tap-shift/ts-repbt/raw/main/PLAYER_MODULE",
    Farm = "https://raw.githubusercontent.com/tap-shift/ts-repbt/raw/main/FARM_MODULE",
    PvP = "https://raw.githubusercontent.com/tap-shift/ts-repbt/raw/main/PVP_MODULE",
    Settings = "https://raw.githubusercontent.com/tap-shift/ts-repbt/raw/main/SETTINGS_MODULE"
}

for name, url in pairs(TnT_Modules) do
    local success, err = pcall(function()
        local moduleContent = game:HttpGet(url.."?t="..os.time(), true)
        
        -- Handle empty modules
        if #moduleContent < 50 then
            -- Create basic tab for empty module
            local tab = Window:CreateTab(name, "question")
            tab:CreateLabel("This module is currently empty")
            tab:CreateLabel("Coming soon in future updates!")
            return
        end
        
        local module = loadstring(moduleContent)()
        if type(module) == "function" then
            module(Window) -- Pass Window to module
        else
            -- Fallback tab if module doesn't return properly
            local tab = Window:CreateTab(name, "alert-circle")
            tab:CreateLabel("Module loaded but didn't initialize correctly")
        end
    end)
    
    if not success then
        -- Create error tab instead of failing completely
        local errorTab = Window:CreateTab(name.." (Error)", "alert-triangle")
        errorTab:CreateLabel("Failed to load module:")
        errorTab:CreateLabel(tostring(err):sub(1, 100))
        warn("["..name.." Module] "..tostring(err))
    end
    task.wait(0.3) -- Prevent rate limiting
end

-- Home Tab
local HomeTab = Window:CreateTab("Home", "home")
HomeTab:CreateSection("System Status")
HomeTab:CreateLabel("All modules processed successfully")
HomeTab:CreateButton({
    Name = "Refresh Modules",
    Callback = function()
        Rayfield:Notify({
            Title = "Refresh",
            Content = "Please re-execute to refresh modules",
            Duration = 3
        })
    end
})
