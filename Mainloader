-- MAIN LOADER v1.9 (minimized PLAYER_MODULE)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
shared.Rayfield = Rayfield

local Window = Rayfield:CreateWindow({
    Name = "ReportBait.exe by TnT",
    LoadingTitle = "Initializing Modules...",
    LoadingSubtitle = "Loader v1.9",
    ConfigurationSaving = true,
    KeySystem = true,
    KeySettings = {
        Title = "TnT Access",
        Subtitle = "Enter clan key",
        Note = "Key rotates weekly",
        FileName = "TnT_Key",
        SaveKey = true,
        Key = "tapshift"
    }
})

-- Correct GitHub raw links (no .lua extension)
local TnT_Modules = {
    Player = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/PLAYER_MODULE",
    Farm = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/FARM_MODULE", 
    PvP = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/PVP_MODULE",
    Settings = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/SETTINGS_MODULE"
}

for name, url in pairs(TnT_Modules) do
    local success, err = pcall(function()
        local moduleSrc = game:HttpGet(url.."?t="..os.time(), true)
        
        -- More flexible content check
        if not moduleSrc:match("return function") and not moduleSrc:match("Window") then
            -- Create placeholder tab for empty modules
            local tab = Window:CreateTab(name, "question")
            tab:CreateLabel("Module placeholder")
            tab:CreateLabel("Content coming soon!")
            return
        end
        
        local module = loadstring(moduleSrc)()
        if type(module) == "function" then
            module(Window)
        else
            -- Create tab even if module doesn't return correctly
            local tab = Window:CreateTab(name, "alert-circle")
            tab:CreateLabel("Module loaded with irregular structure")
        end
    end)
    
    if not success then
        -- Create error tab but continue loading
        local tab = Window:CreateTab(name.." (Error)", "alert-triangle")
        tab:CreateLabel("Load error:")
        tab:CreateLabel(tostring(err):sub(1, 50))
        warn("["..name.." Module] "..tostring(err))
    end
    task.wait(0.5)
end

-- Home Tab
local HomeTab = Window:CreateTab("Home", "home")
HomeTab:CreateSection("System Status")
HomeTab:CreateLabel("All tabs initialized successfully")
