local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Animal Simulator - tapshift hub",
   Icon = "paw-print", -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Initializing Modules...",
   LoadingSubtitle = "Loader v2.8 (Update & Rename)",
   ShowText = "tapshift", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "V", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "tapshift-hub"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "YWj4PHWcjV", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Access",
      Subtitle = "Enter clan key",
      Note = "Key rotates weekly", -- Use this to tell the user how to get a key
      FileName = "TnT_Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"tapshift"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})


local HomeTab = Window:CreateTab("Home", "home")
HomeTab:CreateSection("System Status")
HomeTab:CreateLabel("Main system initialized")

local OrderedModules = {
    {name = "Farm", url = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/FARM_MODULE"},
    {name = "PvP", url = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/PVP_MODULE"},
    {name = "Player", url = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/PLAYER_MODULE"},
    {name = "Settings", url = "https://raw.githubusercontent.com/tap-shift/ts-repbt/main/SETTINGS_MODULE"}
}

for _, module in ipairs(OrderedModules) do
    local success, err = pcall(function()
        local moduleSrc = game:HttpGet(module.url.."?t="..os.time(), true)

        if not moduleSrc:match("return function") and not moduleSrc:match("Window") then
            local tab = Window:CreateTab(module.name, "question")
            tab:CreateLabel("Module placeholder")
            tab:CreateLabel("Content coming soon!")
            return
        end

        local loaded = loadstring(moduleSrc)()
        if type(loaded) == "function" then
            loaded(Window)
        else
            local tab = Window:CreateTab(module.name, "alert-circle")
            tab:CreateLabel("Module loaded with irregular structure")
        end
    end)

    if not success then
        local tab = Window:CreateTab(module.name.." (Error)", "alert-triangle")
        tab:CreateLabel("Load error:")
        tab:CreateLabel(tostring(err):sub(1, 100))

        warn("["..module.name.." Module] Error stack trace:")
        warn(debug.traceback(err, 2))

        warn("["..module.name.." Module] "..tostring(err))
    end
    task.wait(0.5)
end

HomeTab:CreateLabel("Tabs loaded successfully.")
HomeTab:CreateLabel("System ready at "..os.date("%X"))
HomeTab:CreateLabel("Version: v2.8")

HomeTab:CreateSection("Community")
HomeTab:CreateLabel("https://discord.gg/YWj4PHWcjV")

HomeTab:CreateSection("General")
HomeTab:CreateLabel("tapshift on top")
HomeTab:CreateLabel("Credits to Frite for helping me :3")
